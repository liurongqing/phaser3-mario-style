!function(e){var t={};function s(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(i,a,function(t){return e[t]}.bind(null,a));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);var i={};s.r(i),s.d(i,"Main",function(){return l});const a="./",r="./";class l extends Phaser.Scene{constructor(){super("mainScene")}init(){this.playerSpeed=150,this.jumpSpeed=-600,this.levelData={platforms:[{x:72,y:450,numTiles:6,key:"block"},{x:0,y:330,numTiles:8,key:"block"},{x:72,y:210,numTiles:8,key:"block"},{x:0,y:90,numTiles:7,key:"block"},{x:0,y:560,numTiles:1,key:"ground"}]}}preload(){this.load.setBaseURL(a),this.load.setPath(r),this.load.image("ground","images/ground.png"),this.load.image("platform","images/platform.png"),this.load.image("block","images/block.png"),this.load.image("goal","images/gorilla3.png"),this.load.image("barrel","images/barrel.png"),this.load.spritesheet("player","images/player_spritesheet.png",{frameWidth:28,frameHeight:30,margin:1,spacing:1}),this.load.spritesheet("fire","images/fire_spritesheet.png",{frameWidth:20,frameHeight:21,margin:1,spacing:1}),this.load.json("levelData","json/levelData.json")}create(){this.levelData=this.cache.json.get("levelData"),this.createAnims(),this.setupLevel(),this.setupSpawner(),this.physics.add.collider([this.player,this.goal,this.barrels],this.platforms),this.physics.add.overlap(this.player,[this.fires,this.goal,this.barrels],this.restartGame,null,this),this.cursors=this.input.keyboard.createCursorKeys()}update(){const e=this.player.body.blocked.down||this.player.body.touching.down;this.cursors.left.isDown?(this.player.flipX=!1,this.player.body.setVelocityX(-this.playerSpeed),this.player.anims.isPlaying||this.player.anims.play("walking")):this.cursors.right.isDown?(console.log("right..."),this.player.flipX=!0,this.player.body.setVelocityX(this.playerSpeed),this.player.anims.isPlaying||this.player.anims.play("walking")):(this.player.body.setVelocityX(0),this.player.anims.stop("walking"),e&&this.player.setFrame(3)),e&&(this.cursors.space.isDown||this.cursors.up.isDown)&&(this.player.body.setVelocityY(this.jumpSpeed),this.player.anims.stop("walking"),this.player.setFrame(2))}createAnims(){this.anims.get("walking")||this.anims.create({key:"walking",frames:this.anims.generateFrameNames("player",{frames:[0,1,2]}),frameRate:12,yoyo:!0,repeat:-1}),this.anims.get("burning")||this.anims.create({key:"burning",frames:this.anims.generateFrameNames("fire",{frames:[0,1]}),frameRate:4,repeat:-1})}setupLevel(){this.physics.world.bounds.width=this.levelData.world.width,this.physics.world.bounds.height=this.levelData.world.height,this.platforms=this.physics.add.staticGroup();for(let e=0;e<this.levelData.platforms.length;e++){let t,s=this.levelData.platforms[e];if(1===s.numTiles)t=this.add.sprite(s.x,s.y,s.key).setOrigin(0);else{const e=this.textures.get(s.key).get(0).width,i=this.textures.get(s.key).get(0).height;console.log("width height",e,i),t=this.add.tileSprite(s.x,s.y,s.numTiles*e,i,s.key).setOrigin(0)}this.physics.add.existing(t,!0),this.platforms.add(t)}this.fires=this.physics.add.group({allowGravity:!1,immovable:!0});for(let e=0;e<this.levelData.fires.length;e++){let t=this.levelData.fires[e],s=this.add.sprite(t.x,t.y,"fire").setOrigin(0);s.anims.play("burning"),this.fires.add(s),s.setInteractive(),this.input.setDraggable(s)}this.input.on("drag",(e,t,s,i)=>{t.x=s,t.y=i}),this.player=this.add.sprite(this.levelData.player.x,this.levelData.player.y,"player",3),this.physics.add.existing(this.player),this.player.body.setCollideWorldBounds(!0),this.cameras.main.setBounds(0,0,this.levelData.world.width,this.levelData.world.height),this.cameras.main.startFollow(this.player),this.goal=this.add.sprite(this.levelData.goal.x,this.levelData.goal.y,"goal"),this.physics.add.existing(this.goal)}setupSpawner(){this.barrels=this.physics.add.group({bounceY:.1,bounceX:1,collideWorldBounds:!0});this.time.addEvent({delay:this.levelData.spawner.interval,loop:!0,callback:()=>{let e=this.barrels.get(this.goal.x,this.goal.y,"barrel");e.setActive(!0),e.setVisible(!0),e.body.enable=!0,e.setVelocityX(this.levelData.spawner.speed),this.time.addEvent({delay:this.levelData.spawner.lifespan,repeat:0,callback:()=>{this.barrels.killAndHide(e),e.body.enable=!1}})}})}restartGame(e,t){this.cameras.main.fade(500),this.cameras.main.on("camerafadeoutcomplete",(e,t)=>{this.scene.restart()})}}const n=[];for(let e in i)n.push(i[e]);const h={type:Phaser.AUTO,backgroundColor:0,scale:{mode:Phaser.Scale.ENVELOP,parent:"app",autoCenter:Phaser.Scale.CENTER_BOTH,width:360,height:640,min:{width:360,height:640},max:{width:360,height:640}},title:"怪物",pixelArt:!1,physics:{default:"arcade",arcade:{gravity:{y:1e3},debug:!1}},scene:n};window.game=new Phaser.Game(h)}]);